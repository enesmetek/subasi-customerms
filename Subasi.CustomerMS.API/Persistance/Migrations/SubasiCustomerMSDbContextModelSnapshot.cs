// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Subasi.CustomerMS.API.Persistance.Context;

#nullable disable

namespace Subasi.CustomerMS.API.Persistance.Migrations
{
    [DbContext(typeof(SubasiCustomerMSDbContext))]
    partial class SubasiCustomerMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AddressLine = "Yavrukus St. No:19/1",
                            AddressType = "Home",
                            CustomerID = 1,
                            District = "Sisli",
                            Province = "Istanbul"
                        },
                        new
                        {
                            ID = 2,
                            AddressLine = "Lalegul St. No:5",
                            AddressType = "Office",
                            CustomerID = 1,
                            District = "Kagithane",
                            Province = "Istanbul"
                        },
                        new
                        {
                            ID = 3,
                            AddressLine = "Ali Riza Efendi St. No:22",
                            AddressType = "Home",
                            CustomerID = 2,
                            District = "Kesan",
                            Province = "Edirne"
                        },
                        new
                        {
                            ID = 4,
                            AddressLine = "Seher St. No:16/60",
                            AddressType = "Home",
                            CustomerID = 6,
                            District = "Maltepe",
                            Province = "Istanbul"
                        });
                });

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.AppRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Definition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Definition = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Definition = "Member"
                        });
                });

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.AppUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("AppRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppRoleID");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "emkafali@gmail.com",
                            FirstName = "Enes Mete",
                            LastName = "Kafali",
                            PhoneNumber = "553-580-9653"
                        },
                        new
                        {
                            ID = 2,
                            Email = "tktaskiran@gmail.com",
                            FirstName = "Tolga Kagan",
                            LastName = "Taskiran",
                            PhoneNumber = "546-602-3272"
                        },
                        new
                        {
                            ID = 3,
                            Email = "temelatanc@gmail.com",
                            FirstName = "Can",
                            LastName = "Temelatan",
                            PhoneNumber = "533-559-0511"
                        },
                        new
                        {
                            ID = 4,
                            Email = "yildirimgul@gmail.com",
                            FirstName = "Yildirim",
                            LastName = "Gul",
                            PhoneNumber = "545-332-2239"
                        },
                        new
                        {
                            ID = 5,
                            Email = "kafali22@gmail.com",
                            FirstName = "Mustafa",
                            LastName = "Kafali",
                            PhoneNumber = "542-366-6688"
                        },
                        new
                        {
                            ID = 6,
                            Email = "mert@outlook.com",
                            FirstName = "Mert",
                            LastName = "Kafali",
                            PhoneNumber = "546-297-5518"
                        });
                });

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.Address", b =>
                {
                    b.HasOne("Subasi.CustomerMS.API.Core.Domain.Concrete.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.AppUser", b =>
                {
                    b.HasOne("Subasi.CustomerMS.API.Core.Domain.Concrete.AppRole", "AppRole")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.AppRole", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("Subasi.CustomerMS.API.Core.Domain.Concrete.Customer", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
